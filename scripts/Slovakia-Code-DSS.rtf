{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;\f2\fnil\fcharset0 .SFNS-Regular;
\f3\fnil\fcharset0 .SFNS-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red13\green100\blue1;\red181\green0\blue19;
\red20\green0\blue196;\red151\green0\blue126;\red14\green14\blue14;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c0\c45490\c0;\cssrgb\c76863\c10196\c8627;
\cssrgb\c10980\c0\c81176;\cssrgb\c66667\c5098\c56863;\cssrgb\c6700\c6700\c6700;}
\margl1440\margr1440\vieww18660\viewh12800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #\'97start\
\
title: "Slovakia-test"\
output: html_document\
date: "2025\'96FEB12\'94\
---\
\
#load packages\
\
library(endorse)\
library(tidyverse)\
library(haven)\
library(ggpubr)\
library(missForest)\
library(forcats)\
library(reshape2)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 library(readxl)\
library(dplyr)\
library(ggplot2)\
library(dplyr)\
library(ggplot2)\
library(tidyr)  \cf3 # For pivot_longer()\cf2 \
library(forcats)  
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
#set wd\
setwd("~/Dropbox/ArmedDangerousMPSA/Data/Slovakia/data-Slovakia")\
\
#load data\
SKdata <- read_sav("SKdata_April2022.sav")\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 #view data\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 View(SKdata)\
\
##attach\
\
attach(SKdata)\
\
\
\
###prepare the data\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 questions <- c(\cf4 "id"\cf2 , \cf4 "q10a_control"\cf2 , \cf4 "q10b_control"\cf2 , \cf4 "q10c_control"\cf2 , \
               \cf4 "q10a_experiment"\cf2 , \cf4 "q10b_experiment"\cf2 , \cf4 "q10c_experiment"\cf2 )
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
###summarize \
summary(SLVKdata)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \

\f1\fs26 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 # Select relevant columns\cf2 \
data_slvk_questions <- 
\f0\fs24 \cf0 SKdata
\f1\fs26 \cf2 [questions]\
\
\cf3 # Reverse code responses (1 \uc0\u8596  4, 2 \u8596  3)\cf2 \
data_slvk_questions <- data_slvk_questions %>%\
  mutate(across(\cf5 2\cf2 :\cf5 7\cf2 , ~ recode(as.numeric(.), \
                               `\cf5 1\cf2 ` = 4L, \
                               `2` = 3L, \
                               `3` = 2L, \
                               `4` = 1L, \
                               .default = NA_integer_)))  # Keeps NA values intact\
\
# Check if the recoding worked\
summary(data_slvk_questions)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
#calculate and display treatment effects\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf3 # Define experimental and control condition columns\cf2 \
control_questions <- c(\cf4 "q10a_control"\cf2 , \cf4 "q10b_control"\cf2 , \cf4 "q10c_control"\cf2 )\
experiment_questions <- c(\cf4 "q10a_experiment"\cf2 , \cf4 "q10b_experiment"\cf2 , \cf4 "q10c_experiment"\cf2 )\
\
\
\
\cf3 # Compute mean responses for control and experimental groups separately\cf2 \
control_means <- data_slvk_questions %>%\
  summarise(across(all_of(control_questions), \\(x) mean(x, na.rm = \cf6 TRUE\cf2 ), .names = \cf4 "control_\{.col\}"\cf2 ))\
\
experiment_means <- data_slvk_questions %>%\
  summarise(across(all_of(experiment_questions), \\(x) mean(x, na.rm = \cf6 TRUE\cf2 ), .names = \cf4 "experiment_\{.col\}"\cf2 ))\
\
\cf3 # Merge the two summaries into one data frame\cf2 \
treatment_effects <- bind_cols(control_means, experiment_means) %>%\
  mutate(\
    diff_q10a = experiment_q10a_experiment - control_q10a_control,\
    diff_q10b = experiment_q10b_experiment - control_q10b_control,\
    diff_q10c = experiment_q10c_experiment - control_q10c_control\
  )\
\
\cf3 # Display results\cf2 \
print(treatment_effects)\
\
\cf3 # Reshape data for easier visualization\cf2 \
treatment_effects_long <- treatment_effects %>%\
  pivot_longer(cols = starts_with(\cf4 "diff_"\cf2 ), names_to = \cf4 "question"\cf2 , values_to = \cf4 "treatment_effect"\cf2 )\
\
\cf3 # Plot the treatment effects\cf2 \
ggplot(treatment_effects_long, aes(x = question, y = treatment_effect, fill = treatment_effect > \cf5 0\cf2 )) +\
  geom_col() +\
  coord_flip() +\
  labs(title = \cf4 "Treatment Effects: Experimental vs. Control Condition"\cf2 ,\
       x = \cf4 "Survey Question"\cf2 , y = \cf4 "Mean Difference (Experimental - Control)"\cf2 ) +\
  theme_minimal()
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
#relabel covariates:\
\
data_slvk_vars <- mutate(SKdata,\
                  id = id,       \
                  gender = r1,\
                  age = r2pov,\
                  education = r4,\
                  is_capital = recode(as.integer(r13),\
                                   `1` = 1L,\
                                   .default = 0L),\
                  ideology = recode(as.integer(y1),\
                                  `1` = 1L,\
                                  `2` = 2L,\
                                  `3` = 3L,\
                                  `4` = 4L,\
                                  `5` = 5L,\
                                  `9` = 99L),\
                  income = recode(as.integer(r11b),\
                                  `0` = 0L,\
                                  `1` = 1L,\
                                  `2` = 2L,\
                                  `3` = 3L,\
                                  `4` = 4L,\
                                  `5` = 5L,\
                                  `99` = 99L),\
                  DemPolGrievence = q4a,\
                  PolicyPolGrievence = q4b,\
                  EUPolGrievence = q4c,\
                  EconGrievenceRetro = q5a,\
                  EconGrievenceProspInd = q5b,\
                  EconGrievenceProspAgg = q5c,\
                  NatPride = q7,\
                  NativeRights = q9a,\
                  NativeJobs = q9m,\
                  LawOrder = q9e,\
                  Chauvinism = q9d,\
                  ChristianSchool = q9c,\
                  GayNeighbor = q8c,\
                  GayPartner = q8d,\
                  ForNeighbor = q8e,\
                  ForPartner = q8f,\
                  Ukraine = q8g,\
                  DemonstrateNational = q12b,\
                  DemonstrateTrad = q12a\
                  )\
\
\
#collect new variable labels\
vars <- c("id", "gender", "age", "education", "is_capital", "income", "ideology", "DemPolGrievence","PolicyPolGrievence","EUPolGrievence","EconGrievenceRetro","EconGrievenceProspInd","EconGrievenceProspAgg","NatPride","NativeRights", \
"NativeJobs","LawOrder","Chauvinism","ChristianSchool","GayNeighbor","GayPartner","ForNeighbor","ForPartner","Ukraine", "DemonstrateNational", "DemonstrateTrad")\
\
#subset and recode covariates\
data_slvk_vars <- data_slvk_vars[vars]\
\
data_slvk_vars <- mutate(data_slvk_vars, across(14:24, ~ recode(as.numeric(.),\
                                         `1` = 4L,\
                                         `2` = 3L,\
                                         `3` = 2L,\
                                         `4` = 1L)\
                                         )\
                         )\
\
\
data_slvk_vars <- mutate(data_slvk_vars, across(everything(), ~as.numeric(.)))\
data_slvk_vars <- mutate(data_slvk_vars, across(6:26, ~ifelse(. %in% c(99, 9), NA, .)))\
\
\
#look at missing\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 sapply(
\f0\fs24 \cf0 data_slvk_vars
\f1\fs26 \cf2 , \cf6 function\cf2 (x) sum(is.na(x)))
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
#shows only income and ideology have NAs\
\
#impute using RF\
\
data_slvk_imp <- missForest(as.data.frame(data_slvk_vars))\
\
\
#
\f2\fs28 \cf7 E
\f3\b xtract
\f2\b0  the imputed dataset (
\f1 ximp
\f2 ) from 
\f1 data_slvk_imp
\f2  and convert it into a 
\f3\b tibble
\f2\b0  (a modern version of a data frame).\
#
\f1 ximp
\f2  likely contains 
\f3\b imputed values for missing variables
\f2\b0  in the dataset.
\f0\fs24 \cf0 \
\
data_slvk_vars <- as_tibble(data_slvk_imp$ximp)\
\
#
\f2\fs28 \cf7 This 
\f3\b standardizes
\f2\b0  variables 
\f3\b from columns 2 to 26
\f2\b0  by applying 
\f1 scale()
\f2 .\
#
\f1 scale(.)
\f2  
\f3\b centers the data (mean = 0) and scales it (SD = 1)
\f2\b0 , making the variables 
\f3\b comparable
\f2\b0 .\
#
\f1 as.vector(scale(.))
\f2  ensures the result remains a simple numeric vector.\
#
\f1 mutate(across(...))
\f2  applies this transformation 
\f3\b across multiple columns
\f2\b0 .\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 #look again at missing\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 sapply(
\f0\fs24 \cf0 data_slvk_vars
\f1\fs26 \cf2 , \cf6 function\cf2 (x) sum(is.na(x)))
\f0\fs24 \cf0 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf0 #now no NAs\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
data_slvk_vars <- mutate(data_slvk_vars, across(2:26, ~ as.vector(scale(.))))\
\
\
#
\f2\fs28 \cf7 This 
\f3\b merges
\f2\b0  
\f1 data_slvk_vars
\f2  (standardized imputed data) with 
\f1 data_slvk_questions
\f2  (endorsement experiment responses) 
\f3\b by the \'93id\'94 column
\f2\b0 .\
#
\f1 merge(..., by = "id")
\f2  ensures that the standardized variables and endorsement experiment responses are properly aligned for analysis. #This ensures that all predictors are on a 
\f3\b comparable scale
\f2\b0 , preventing variables with different units (e.g., income vs. ideology) from dominating the model\
#
\f1 as_tibble()
\f2  ensures the result remains a tibble for better handling in 
\f1 tidyverse
\f2 .
\f0\fs24 \cf0 \
\
data_slvk <- as_tibble(merge(data_slvk_vars, data_slvk_questions, by = "id"))\
\
\
#create named list (Y) for the response questions, 
\f2\fs28 \cf7 where each element represents a 
\f3\b pair of control and experimental conditions
\f2\b0  from the endorsement experiment.\
#
\f3\b Each key (
\f1\b0 Q1
\f3\b , 
\f1\b0 Q2
\f3\b , 
\f1\b0 Q3
\f3\b ) corresponds to a survey question
\f2\b0 , mapping its 
\f3\b control
\f2\b0  and 
\f3\b experimental
\f2\b0  versions.
\f0\fs24 \cf0 \
\
Y <- list(Q1 = c("q10a_control", "q10a_experiment"), Q2 = c("q10b_control", "q10b_experiment"), Q3 = c("q10c_control", "q10c_experiment"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \
\
#relabel basic covariates - sociodemos\
\
\
\
SKdata <- SKdata %>%\
  rename(\
    Gender = r1,          \cf3 # Make sure `gender` exists in SKdata\cf2 \
    education = r4,       \cf3 # Make sure `education` exists\cf2 \
    is_capital = r13,     \cf3 # Make sure `is_capital` exists\cf2 \
    ideology = y1,        \cf3 # Make sure `ideology` exists\cf2 \
    income = r11b,        \cf3 # Make sure `income` exists\cf2 \
    age = r2pov          \cf3 # Make sure `age` exists\cf2 \
  )\
\
\
\
\

\f0\fs24 \cf0 #Estimate endorse model\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0     \
endorse1 <- endorse(Y = Y, data = SKdata, identical.lambda = FALSE, covariates = TRUE, formula.indiv = formula( ~ r1 ), hierarchical = FALSE)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
endorse1 <- endorse(Y = Y, data = SKdata, identical.lambda = FALSE, covariates = TRUE, formula.indiv = formula( ~ age + Gender + education + is_capital + ideology + income), hierarchical = FALSE)\
\
\
\
# 
\f2\fs28 \cf7 This converts the 
\f1 delta
\f2  column from the 
\f1 endorse1
\f2  data frame into a matrix and then into a new data frame 
\f1 df
\f2 . The 
\f1 as.matrix()
\f2  function converts 
\f1 endorse1$delta
\f2  into a matrix, and the 
\f1 data.frame()
\f2  function converts it into a data frame. This step is useful if 
\f1 endorse1$delta
\f2  was not already a matrix or if you wanted to ensure it is structured as a data frame.\

\f0\fs24 \cf0 \
df <- data.frame(as.matrix(endorse1$delta))\
\
###
\f2\fs28 \cf7 This line calculates the mean and standard deviation for columns 2 to 7 of 
\f1 df
\f2  and stores them in a new data frame 
\f1 ci
\f2 . #
\f1 df[2:7]
\f2 : Selects columns 2 through 7 of 
\f1 df
\f2 . #
\f1 colnames(df[2:7])
\f2 : Extracts the column names for the selected columns and assigns them to the 
\f1 variables
\f2  column of the new 
\f1 ci
\f2  data frame. #
\f1 apply(df[2:7], 2, mean)
\f2 : Computes the mean of each column (specified by the 
\f1 2
\f2  in the second argument, which tells 
\f1 apply()
\f2  to work across columns). #
\f1 apply(df[2:7], 2, sd)
\f2 : Computes the standard deviation for each column in the same way.\

\f0\fs24 \cf0 \
ci <- data.frame(variables = colnames(df[2:7]), mean = apply(df[2:7], 2, mean), sd = apply(df[2:7], 2, sd))\
\
##
\f2\fs28 \cf7 This adds two new columns (
\f1 max
\f2  and 
\f1 min
\f2 ) to the 
\f1 ci
\f2  data frame that represent the confidence intervals for the means. #
\f1 mutate()
\f2 : This function from the 
\f1 dplyr
\f2  package adds new columns or modifies existing ones. #
\f1 max = mean + 1.96 * sd
\f2 : Calculates the upper bound of the confidence interval (mean + 1.96 * standard deviation). #
\f1 min = mean - 1.96 * sd
\f2 : Calculates the lower bound of the confidence interval (mean - 1.96 * standard deviation).\

\f0\fs24 \cf0 \
ci <- mutate(ci, max = mean + 1.96 * sd, min = mean - 1.96 * sd)\
\
#
\f2\fs28 \cf7 This assigns descriptive labels to the 
\f1 variables
\f2  column of the 
\f1 ci
\f2  data frame. #The 
\f1 variables
\f2  column, which was previously filled with the column names from 
\f1 df[2:7]
\f2 , is now replaced with the human-readable labels provided in the 
\f1 c()
\f2  vector.\

\f0\fs24 \cf0 \
ci$variables <- c("Age", "Gender", "Education", "Capital", "Ideology", "Income")\
\
#the result of the above is 
\f2\fs28 \cf7 a data frame 
\f1 ci
\f2  with the following structure:\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf7 	\'95	
\f1 variables
\f2 : Descriptive labels for the variables (e.g., \'93Age\'94, \'93Gender\'94, etc.).\
	\'95	
\f1 mean
\f2 : The mean value of each variable (from columns 2 to 7 in 
\f1 df
\f2 ).\
	\'95	
\f1 sd
\f2 : The standard deviation for each variable.\
	\'95	
\f1 max
\f2 : The upper bound of the 95% confidence interval for each mean.\
	\'95	
\f1 min
\f2 : The lower bound of the 95% confidence interval for each mean.
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
###\
ci <- mutate(ci, variables= fct_reorder(variables, mean))\
\
\
\
###coefplot\
\
ggplot(ci, aes(x = variables, y = mean)) + geom_point() + geom_errorbar(aes(ymin = min, ymax = max)) + coord_flip() + geom_abline(slope = 0, intercept = 0, color = "red") + ggtitle("Model 1: Background Characterstics") + theme(plot.title = element_text(hjust = 0.5)) + ylim(-0.5, 0.5)\
\
\
##full model\
\
endorseFULL <- endorse(Y = Y, data = data_slvk, identical.lambda = FALSE, covariates = TRUE, formula.indiv = formula( ~ age + gender + education + is_capital + ideology + income + DemPolGrievence + PolicyPolGrievence + EUPolGrievence + EconGrievenceRetro + EconGrievenceProspInd + EconGrievenceProspAgg + NatPride + NativeRights + NativeJobs + DemonstrateNational + LawOrder + Chauvinism + ChristianSchool + DemonstrateTrad + GayNeighbor+ GayPartner+ ForNeighbor + ForPartner + Ukraine), hierarchical = FALSE)\
\
#same procedure as above but with more covariates with 95% confidence intervals, 1.96\
\
df <- data.frame(as.matrix(endorseFULL$delta))\
ci <- data.frame(variables = colnames(df[2:26]), mean = apply(df[2:26], 2, mean), sd = apply(df[2:26], 2, sd))\
ci <- mutate(ci, max = mean + 1.96 * sd, min = mean - 1.96 * sd)\
ci$variables <- c("Age", "Gender", "Education", "Capital", "Ideology", "Income", "DemPolGrievence", "PolicyPolGrievence", "EUPolGrievence", "EconGrievenceRetro", "EconGrievenceProspInd", "EconGrievenceProspAgg", "NatPride", "NativeRights", "NativeJobs", "DemonstrateNational", "LawOrder", "Chauvinism", "ChristianSchool", "DemonstrateTrad", "GayNeighbor", "GayPartner", "ForNeighbor", "ForPartner", "Ukraine")\
ci <- mutate(ci, variables= fct_reorder(variables, mean))\
\
\
#plot results with 95 ci\
\
ggplot(ci, aes(x = variables, y = mean)) + geom_point() + geom_errorbar(aes(ymin = min, ymax = max)) + coord_flip() + geom_abline(slope = 0, intercept = 0, color = "red") + ggtitle("Model 2: Full Model") + theme(plot.title = element_text(hjust = 0.5)) \
\
\
\
\
#same as above but with 90% confidence intervals, 1.65\
df <- data.frame(as.matrix(endorseFULL$delta))\
ci <- data.frame(variables = colnames(df[2:26]), mean = apply(df[2:26], 2, mean), sd = apply(df[2:26], 2, sd))\
ci <- mutate(ci, max = mean + 1.65 * sd, min = mean - 1.65 * sd)\
ci$variables <- c("Age", "Gender", "Education", "Capital", "Ideology", "Income", "DemPolGrievence", "PolicyPolGrievence", "EUPolGrievence", "EconGrievenceRetro", "EconGrievenceProspInd", "EconGrievenceProspAgg", "NatPride", "NativeRights", "NativeJobs", "DemonstrateNational", "LawOrder", "Chauvinism", "ChristianSchool", "DemonstrateTrad", "GayNeighbor", "GayPartner", "ForNeighbor", "ForPartner", "Ukraine")\
ci <- mutate(ci, variables= fct_reorder(variables, mean))\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 #plot results with 90% ci\
\
ggplot(ci, aes(x = variables, y = mean)) + geom_point() + geom_errorbar(aes(ymin = min, ymax = max)) + coord_flip() + geom_abline(slope = 0, intercept = 0, color = "red") + ggtitle("Model 2: Full Model") + theme(plot.title = element_text(hjust = 0.5)) \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 #FINAL MODEL: same procedure as above with 95% confidence intervals, 1.96 (minus EU pol grievance variable)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 endorseFULL1 <- endorse(Y = Y, data = data_slvk, identical.lambda = FALSE, covariates = TRUE, formula.indiv = formula( ~ age + gender + education + is_capital + ideology + income + DemPolGrievence + PolicyPolGrievence + EconGrievenceRetro + EconGrievenceProspInd + EconGrievenceProspAgg + NatPride + NativeRights + NativeJobs + DemonstrateNational + LawOrder + Chauvinism + ChristianSchool + DemonstrateTrad + GayNeighbor+ GayPartner+ ForNeighbor + ForPartner + Ukraine), hierarchical = FALSE)\
\
\
df <- data.frame(as.matrix(endorseFULL1$delta))\
ci <- data.frame(variables = colnames(df[2:25]), mean = apply(df[2:25], 2, mean), sd = apply(df[2:25], 2, sd))\
ci <- mutate(ci, max = mean + 1.96 * sd, min = mean - 1.96 * sd)\
ci$variables <- c("Age", "Gender", "Education", "Capital", "Ideology", "Income", "DemPolGrievence", "PolicyPolGrievence", "EconGrievenceRetro", "EconGrievenceProspInd", "EconGrievenceProspAgg", "NatPride", "NativeRights", "NativeJobs", "DemonstrateNational", "LawOrder", "Chauvinism", "ChristianSchool", "DemonstrateTrad", "GayNeighbor", "GayPartner", "ForNeighbor", "ForPartner", "Ukraine")\
ci <- mutate(ci, variables= fct_reorder(variables, mean))\
\
\
#plot results with 95 ci\
\
ggplot(ci, aes(x = variables, y = mean)) + geom_point() + geom_errorbar(aes(ymin = min, ymax = max)) + coord_flip() + geom_abline(slope = 0, intercept = 0, color = "red") + ggtitle("Model 2: Full Model") + theme(plot.title = element_text(hjust = 0.5)) \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
#end\
\
}